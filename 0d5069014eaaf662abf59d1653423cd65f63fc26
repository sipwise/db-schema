{
  "comments": [
    {
      "key": {
        "uuid": "bada0100_90c31438",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 2,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "would name it as cdr_provider",
      "range": {
        "startLine": 2,
        "startChar": 50,
        "endLine": 2,
        "endChar": 54
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_303a6837",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 2,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:28:04Z",
      "side": 1,
      "message": "remove \"IF NOT EXISTS\"\nif there is a table exists during ngcp-update-db-schema we MUST produce an error as it breaks consistency. (e.g. someone added similar table for some reason or even worse, someone already added a \"beta\" version of such table and it may simply silently break the logic).\nif you need to apply it to a customer separately, use the final .up script and apply it via \u0027ngcp-update-db-schema\u0027, that way you will have a record in ngcp.db_schema and consequitive ngcp-update-db-schema runs skip it normally.",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_b045f8b4",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 2,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2016-04-09T11:50:08Z",
      "side": 1,
      "message": "well, had it without before, but basically when such create statements have to be spread accross mysql nodes, if not exists might be helpful? same with the down script.",
      "parentUuid": "bada0100_303a6837",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_50792cfb",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 2,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T12:04:35Z",
      "side": 1,
      "message": "no, it is never helpful with for us with \"create table\".\nonly with triggers when we update already existing triggers as there is no other way for that.",
      "parentUuid": "bada0100_b045f8b4",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_7009d094",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "would name it as cdr_direction",
      "range": {
        "startLine": 17,
        "startChar": 38,
        "endLine": 17,
        "endChar": 55
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_50128cb5",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2016-04-09T11:50:08Z",
      "side": 1,
      "message": "yup, but aligning the naming in rateomat changes will be part of another ticket then :-)",
      "parentUuid": "bada0100_7009d094",
      "range": {
        "startLine": 17,
        "startChar": 38,
        "endLine": 17,
        "endChar": 55
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_707eb0e6",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T12:04:35Z",
      "side": 1,
      "message": "we MUST name them with \"final names\" before the merge\nas otherwise \"later\" may never happen which means that someone may start using it in his/her logic straight away.\nso please lets name them properly before that actual merge.",
      "parentUuid": "bada0100_50128cb5",
      "range": {
        "startLine": 17,
        "startChar": 38,
        "endLine": 17,
        "endChar": 55
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_50ddac13",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "this is a subject for discussion with Andreas.\nas we discussed I lean more towards \u0027in\u0027, \u0027out\u0027 here as it is more clear and suit better, as AFAIR source_, destination_ were historically only used as named for the columns in cdr.",
      "range": {
        "startLine": 20,
        "startChar": 4,
        "endLine": 21,
        "endChar": 17
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_10fe446c",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 31,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "would name it as cdr_cash_balance",
      "range": {
        "startLine": 31,
        "startChar": 38,
        "endLine": 31,
        "endChar": 58
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_70e230d7",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "please do not provide with such commented values in the final merge (while it is ok for now while in DRAFT) as it is very confusing. only comments regarding the actual statements are allowed.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 35
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_301108ad",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2016-04-09T11:50:08Z",
      "side": 1,
      "message": "ack, this denote the only extensions to all those dictionaries here planned.",
      "parentUuid": "bada0100_70e230d7",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 35
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_d0251c0b",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2016-04-09T11:50:08Z",
      "side": 1,
      "message": "would prefer to have ranged autoinc starting points for the dicts.",
      "range": {
        "startLine": 40,
        "startChar": 31,
        "endLine": 40,
        "endChar": 34
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_d06c3c39",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T12:04:35Z",
      "side": 1,
      "message": "there is totally no need for that.",
      "parentUuid": "bada0100_d0251c0b",
      "range": {
        "startLine": 40,
        "startChar": 31,
        "endLine": 40,
        "endChar": 34
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_10e724e6",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "same, such comments are allowed only for DRAFTs.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 11
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_f0f4e088",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 46,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "would name it cdr_time_balance",
      "range": {
        "startLine": 46,
        "startChar": 38,
        "endLine": 46,
        "endChar": 58
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_d0f75c8b",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 57,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "would name it cdr_relation",
      "range": {
        "startLine": 57,
        "startChar": 38,
        "endLine": 57,
        "endChar": 54
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_b0d738ed",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 72,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "would name simply it as cdr_cash_balance",
      "range": {
        "startLine": 72,
        "startChar": 38,
        "endLine": 72,
        "endChar": 59
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_d0d0bcf9",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "this will be most likely as DATETIME as decimals are TZ dependent as partitioning thinks and does not allow it for RANGE neither for TO_DAYS nor FROM_UNIXTIME. I am working on the partitinoning research now and provide with more info about that but you can leave it like this for now before the merge.",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 40
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_701790a4",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:40:08Z",
      "side": 1,
      "message": "please use this one below instead of cdr_start_time\ncdr_p_date datetime not null\n\nwith partitioning implementation as the next step there be will a new column added to accounting.cdr used purely for partitioniong.\n\np_date datetime not null after id\ndrop primary key, add primary key (id, p_date)\n\nas start_time decimal(13,3) cannot be used for partitioning nor can it be converted to datetime as it contains microseconds + too integrated into the logic now.\nthere will be a trigger that during insert/update  accounting.cdr auto fills it with the value from start_time.",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 16
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_f03b8036",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2016-04-09T11:50:08Z",
      "side": 1,
      "message": "yes, but should be the exact same data type as in cdr",
      "parentUuid": "bada0100_d0d0bcf9",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 40
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_1083a4cd",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2016-04-09T11:54:33Z",
      "side": 1,
      "message": "not sure if partitioning by datetime col is available first in 5.7",
      "parentUuid": "bada0100_f03b8036",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 40
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_f0694026",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T12:04:35Z",
      "side": 1,
      "message": "please read my comment carefully, I provided there with the column name/type for accounting.cdr",
      "parentUuid": "bada0100_f03b8036",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 40
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_f0cdc05e",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 86,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "remove this and never use in .up statements please, our mysql servers have different offsets for autoincrement.",
      "range": {
        "startLine": 86,
        "startChar": 16,
        "endLine": 86,
        "endChar": 32
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_901f94b7",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 86,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2016-04-09T11:50:08Z",
      "side": 1,
      "message": "this table has not autoinc any more at all, so needs to be removed here. but in general its preferrable to have ranged autoinc values , especially for these dicts?",
      "parentUuid": "bada0100_f0cdc05e",
      "range": {
        "startLine": 86,
        "startChar": 16,
        "endLine": 86,
        "endChar": 32
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_9076b405",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 86,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T12:04:35Z",
      "side": 1,
      "message": "could you please describe what you have in mind with that ?\nas normally shifting auto inc is when you want to reserve some \"lesser\" range for values.",
      "parentUuid": "bada0100_901f94b7",
      "range": {
        "startLine": 86,
        "startChar": 16,
        "endLine": 86,
        "endChar": 32
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_90f1d497",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 91,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "just \u0027provider_id\u0027 as  basically \u0027_col_\u0027 is just a useless extra imho and in all similar places.",
      "range": {
        "startLine": 91,
        "startChar": 2,
        "endLine": 91,
        "endChar": 17
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_502b6ceb",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "please full names \u0027value_before\u0027, \u0027value_after\u0027\n... moreover I would call it as\n\u0027value_before\u0027\n\u0027value\u0027\n\nas \u0027value_after\u0027 makes no definitive sense (after what ?). there are only a value that was before and a current value.",
      "range": {
        "startLine": 94,
        "startChar": 2,
        "endLine": 94,
        "endChar": 12
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_9048f4cd",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2016-04-09T11:50:08Z",
      "side": 1,
      "message": "before and after processing (rating and reduction) by rateomat.\n\nideally those values in the data tables should have no names at all (i.e. just indexed values) while semantics come from some code \n\nthe thing with short \u0027val\u0027 is, for the \"relations\" data table there is only \"value\", so that column should to be quoted everywhere, and \"val\" not.",
      "parentUuid": "bada0100_502b6ceb",
      "range": {
        "startLine": 94,
        "startChar": 2,
        "endLine": 94,
        "endChar": 12
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_b073b814",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T12:04:35Z",
      "side": 1,
      "message": "name it as \"balance\" then (also in par with our contract_balance naming convention for that)\n\nit is more up to you really but \"after\" is kinda bad imho and here is why:\n\"balance_before\" - a value before now\n\"balance\" - current balance\n\"balance_after\" - now this value may be used theoretically for something that \"will\" happen\n\nand using it now as \"balance_after\" it negates the aforementioned possibility + confusing a little for \"manual selects\". as it is just great to select ... \"balance\" as in the current one.",
      "parentUuid": "bada0100_9048f4cd",
      "range": {
        "startLine": 94,
        "startChar": 2,
        "endLine": 94,
        "endChar": 12
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_7030f056",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 108,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "please remove all those useless _col_ extra.\njust \u0027provider_id\u0027, \u0027direction_id\u0027, \u0027relation_id\u0027.",
      "range": {
        "startLine": 108,
        "startChar": 2,
        "endLine": 108,
        "endChar": 17
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_b0ee58b3",
        "filename": "db_scripts/diff/15234.up",
        "patchSetId": 10
      },
      "lineNbr": 111,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2016-04-09T11:23:13Z",
      "side": 1,
      "message": "please full names, \u0027value\u0027.",
      "range": {
        "startLine": 111,
        "startChar": 2,
        "endLine": 111,
        "endChar": 5
      },
      "revId": "0d5069014eaaf662abf59d1653423cd65f63fc26",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    }
  ]
}
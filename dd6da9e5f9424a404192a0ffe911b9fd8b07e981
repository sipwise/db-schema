{
  "comments": [
    {
      "key": {
        "uuid": "9a561d44_8b447d75",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2017-01-09T12:44:50Z",
      "side": 1,
      "message": "it looks like it is a \"dictionary\" table.\nwhy do we need enum here at all then?\nnext time when we will need new type \"zzz\" we will have to alter the table. Isn\u0027t it?",
      "range": {
        "startLine": 8,
        "startChar": 2,
        "endLine": 8,
        "endChar": 12
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_71b598cc",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2017-01-09T15:02:11Z",
      "side": 1,
      "message": "enum is good to have it \"strict\" and alter table is very cheap in this case while that strict approach helps to avoid typos in request constructors, etc.",
      "parentUuid": "9a561d44_8b447d75",
      "range": {
        "startLine": 8,
        "startChar": 2,
        "endLine": 8,
        "endChar": 12
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_eb541923",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2017-01-09T12:44:50Z",
      "side": 1,
      "message": "it is useles and not necessary information here.\nP.S. backporting is NOT allowed here, moreover to mr3.8!",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_b1c61048",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2017-01-09T15:02:11Z",
      "side": 1,
      "message": "agreed here, please remove all such comments, only leave comments there that hold useful remarks.",
      "parentUuid": "9a561d44_eb541923",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_ec9b8f70",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2017-01-09T15:41:32Z",
      "side": 1,
      "message": "3.8 means to be compatible with non-mariadb, which means for partitioning this table one day, we must not use foreign key constraints, which is stated here to justify the primary key defined below this line.",
      "parentUuid": "9a561d44_b1c61048",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_4b31c50a",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2017-01-09T12:44:50Z",
      "side": 1,
      "message": "the same as above.",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 12
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_2b361104",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2017-01-09T12:44:50Z",
      "side": 1,
      "message": "\"NOT NULL\" values without defaults causing and code error on the next table alter, e.g. in mr5.5 LTS -\u003e mr6.5 LTS upgrade.\nas the OLD code will try to insert values in new table format.\n\nIsn\u0027t it?",
      "range": {
        "startLine": 75,
        "startChar": 11,
        "endLine": 75,
        "endChar": 19
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_91fe6c6a",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2017-01-09T15:02:11Z",
      "side": 1,
      "message": "basically \"not null\" without a \"default value\" declaration create a protection for inserting empty data. it\u0027s up to Rene if he wants to allow empty data inserts there or expects the \"TEXT\" field to contain data explicitly.\n\nthere should not be table alters that may cause that, please provide with an example.",
      "parentUuid": "9a561d44_2b361104",
      "range": {
        "startLine": 75,
        "startChar": 11,
        "endLine": 75,
        "endChar": 19
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_2cd8e752",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2017-01-09T15:41:32Z",
      "side": 1,
      "message": "application logic must not insert null, but skip instead. eg. for the massive tables of cdr with identical structure, this ensures we save space.",
      "parentUuid": "9a561d44_91fe6c6a",
      "range": {
        "startLine": 75,
        "startChar": 11,
        "endLine": 75,
        "endChar": 19
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_8b3bddea",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2017-01-09T12:44:50Z",
      "side": 1,
      "message": "drop this please.",
      "range": {
        "startLine": 77,
        "startChar": 2,
        "endLine": 77,
        "endChar": 68
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_ab2181b6",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2017-01-09T12:44:50Z",
      "side": 1,
      "message": "what this gives you, BTW?",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 21
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_9135cc48",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2017-01-09T15:02:11Z",
      "side": 1,
      "message": "please move this \"COMMIT\" statement to the end of the script and also remove the \"#final commit\" comment as it does not bring any useful info (commit is commit right ? :) )",
      "parentUuid": "9a561d44_ab2181b6",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 21
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_31304056",
        "filename": "db_scripts/diff/15311.up",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2017-01-09T15:02:11Z",
      "side": 1,
      "message": "an be removed as we already have mixed DLL/non-DDL statements there",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 19
      },
      "revId": "dd6da9e5f9424a404192a0ffe911b9fd8b07e981",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    }
  ]
}